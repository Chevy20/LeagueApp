name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - matt
      - victor

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '14'

      # Backend
      - name: Install dependencies (Backend)
        working-directory: ./backend
        run: npm install

      #- name: Run tests (Backend)
        #working-directory: ./backend
        #run: npm test

      # Frontend
      - name: Install dependencies (Frontend)
        working-directory: ./frontend
        run: npm install

      #- name: Run tests (Frontend)
        #working-directory: ./frontend
        #run: npm test

  deploy:
    needs: build-and-test
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and push backend image
        uses: docker/build-push-action@v4
        with:
          context: ./backend
          file: ./backend/Dockerfile.backend
          push: true
          tags: mattchevy/leagueapp-backend:latest

      - name: Build and push frontend image
        uses: docker/build-push-action@v4
        with:
          context: ./frontend
          file: ./frontend/Dockerfile.frontend
          push: true
          tags: mattchevy/leagueapp-frontend:latest

      - name: Deploy to EC2
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          port: ${{ secrets.EC2_PORT }}
          script: |
            cd /home/ubuntu/LeagueApp
            git pull origin main
            export MONGO_URI=${{ secrets.MONGO_URI }}
            export RIOT_API_KEY=${{ secrets.RIOT_API_KEY }}
            docker-compose pull
            docker-compose up -d
