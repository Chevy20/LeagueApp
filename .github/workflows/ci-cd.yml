# CI/CD Pipeline
name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - matt
      - victor

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.17.0'

      # Backend
      - name: Install dependencies (Backend)
        working-directory: ./backend
        run: npm install

      #- name: Run tests (Backend)
        #working-directory: ./backend
        #run: npm test

      # Frontend
      - name: Install dependencies (Frontend)
        working-directory: ./frontend
        run: npm install

      #- name: Run tests (Frontend)
        #working-directory: ./frontend
        #run: npm test

  deploy:
    needs: build-and-test
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and push backend image
        uses: docker/build-push-action@v4
        with:
          context: ./backend
          push: true
          tags: mattchevy/leagueapp-backend:latest

      - name: Build and push frontend image
        uses: docker/build-push-action@v4
        with:
          context: ./frontend
          push: true
          tags: mattchevy/leagueapp-frontend:latest

      - name: Deploy to EC2
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # Test SSH connection
            ssh -o StrictHostKeyChecking=no -o ConnectTimeout=30 ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }} ls /home/ubuntu

            # Change to the application directory
            cd /home/ubuntu/LeagueApp
            git pull origin main
            
            # Overwrite the .env file with the new values
            echo "PORT=5000" > .env
            echo "RIOT_API_KEY=${{ secrets.RIOT_API_KEY }}" >> .env
            chmod 600 .env
            
            # Pull updated images and restart containers
            docker compose pull
            docker compose up -d

            # Gracefully reload Nginx
            docker exec leagueapp-nginx-1 nginx -s reload
